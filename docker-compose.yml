version: '3.5'
services:
  
#Nginx
  proxy:
    image: nginx:latest
    container_name: proxy
    volumes:
        - "./certificate/nginx.conf:/etc/nginx/nginx.conf"
        - "./certificate/site.key:/etc/nginx/ssl/site.key"
        - "./certificate/site.crt:/etc/nginx/ssl/site.crt"
        - "./certificate/rootCA.pem:/etc/nginx/ssl/rootCA.pem"
        - "./proxy/html/insert.html:/usr/share/nginx/html/proxy/insert.html"
        - "./proxy/html/select.html:/usr/share/nginx/html/proxy/select.html"
    ports:
      - "8080:80"
      - "443:443"
    links:
      - backend:backend
    depends_on:
      - "mysql"
    networks: 
      - frontend

#Python Backend
  backend:
    container_name: backend
    build: ./app
    links:
      - mysql
    ports:
      - 3000:3000
    expose: 
      - "3000"
    networks:
      - backend
      - frontend
    depends_on:
      - "mysql"

#Database Mysql
  mysql:
    #build: ./database
    image: mysql:latest
    container_name: database
    command: --default-authentication-plugin=mysql_native_password
    volumes:
        - "./database/schema.sql:/docker-entrypoint-initdb.d/mysql.sql"
    environment:
      "MYSQL_DATABASE": "odwta"
      "MYSQL_ALLOW_EMPTY_PASSWORD": "true" 
    ports:
      - "3306:3306"
    networks:
      - backend


#Docker Networks
networks:
  frontend:
  backend: